version: '2'
services:

  coredns:
    image: coredns/coredns:1.6.2
    restart: always
    volumes:
      - "./config/coredns/:/db/"
    command: "-conf /db/Corefile"
    expose:
      - "53/udp"
    ports:
      - "53:53/udp"

  nginx:
    image: arm32v6/nginx:1.17.2-alpine
    restart: always
    volumes:
      - "./config/nginx/403.html:/usr/share/nginx/html/403.html"
      - "./config/nginx/nginx.conf:/etc/nginx/nginx.conf"
    expose:
      - "80"
    ports:
      - "80:80"


  telegraf:
    image: alexswilliams/arm32v6-telegraf:1.11.4-alpine-3.10.2
    restart: always
    ports:
      - "9273:9273"
    cap_add:
      - NET_RAW
    volumes:
      - "./config/telegraf.conf:/etc/telegraf/telegraf.conf"


  # prometheus:
  #   depends_on:
  #     - prom-push-gw
  #     - prom-node-exporter
  #   image: alexswilliams/arm32v6-prometheus:2.12.0-alpine-3.10.2
  #   restart: always
  #   volumes:
  #     - "./config/prometheus.yml:/etc/prometheus/prometheus.yml"
  #     - "prometheus-volume:/etc/prometheus/data"
  #   environment:
  #     PROM_STORAGE_TSDB_RETENTION_TIME: "1y"
  #     PROM_STORAGE_TSDB_RETENTION_SIZE: "5GB"
  #   expose:
  #     - "9090"
  #   ports:
  #     - "9090:9090"

  prom-push-gw:
    image: alexswilliams/arm32v6-prometheus-push-gateway:0.9.1-alpine-3.10.2
    restart: always
    expose:
      - "9091"
    ports:
      - "9091:9091"

  prom-node-exporter:
    image: alexswilliams/arm32v6-prometheus-node-exporter:0.18.1-alpine-3.10.2
    restart: always
    user: root
    privileged: true
    read_only: true
    volumes:
      - "/proc:/host/procfs:ro"
      - "/:/host/rootfs:ro"
      - "/sys:/host/sysfs:ro"
    environment:
      NODE_EXP_PATH_PROCFS: /host/procfs
      NODE_EXP_PATH_ROOTFS: /host/rootfs
      NODE_EXP_PATH_SYSFS: /host/sysfs
      NODE_EXP_COLLECTOR_FILESYSTEM_IGNORED_MOUNT_POINTS: ^/(sys|proc|run|dev|host|etc|var/lib/docker.+)($$|/)
      NODE_EXP_WEB_LISTEN_ADDRESS: ":9100"
    expose:
      - "9100"
    ports:
      - "9100:9100"
    command: "--web.disable-exporter-metrics"

  #  tplink-scraper:
  #    depends_on:
  #      - prom-push-gw
  #    build:
  #      context: ./tplink-hs110-client
  #      dockerfile: Dockerfile.arm32v6
  #    environment:
  #      POLL_TIME_SECONDS: "5"
  #      TPLINK_HOST: "192.168.1.30"
  #      PUSH_GW_URL: "http://prom-push-gw:9091/metrics/job/tplink-scraper-1"

  tplink-scraper-bedroom-heater:
    depends_on:
      - prom-push-gw
    build:
      context: ./tplink-hs110-client-c
      dockerfile: Dockerfile.arm32v6
    restart: always
    environment:
      POLL_TIME_MILLIS: "5000"
      TPLINK_HOST: "192.168.1.30"
      PUSH_GW_HOST: "prom-push-gw"
      PUSH_GW_PORT: "9091"
      PUSH_GW_ENDPOINT: "/metrics/job/tplink-scraper-bedroom-heater"

  tplink-scraper-bedroom-desk:
    depends_on:
      - prom-push-gw
    build:
      context: ./tplink-hs110-client-c
      dockerfile: Dockerfile.arm32v6
    restart: always
    environment:
      POLL_TIME_MILLIS: "5000"
      TPLINK_HOST: "192.168.1.35"
      PUSH_GW_HOST: "prom-push-gw"
      PUSH_GW_PORT: "9091"
      PUSH_GW_ENDPOINT: "/metrics/job/tplink-scraper-bedroom-desk"

  tplink-scraper-router:
    depends_on:
      - prom-push-gw
    build:
      context: ./tplink-hs110-client-c
      dockerfile: Dockerfile.arm32v6
    restart: always
    environment:
      POLL_TIME_MILLIS: "5000"
      TPLINK_HOST: "192.168.1.38"
      PUSH_GW_HOST: "prom-push-gw"
      PUSH_GW_PORT: "9091"
      PUSH_GW_ENDPOINT: "/metrics/job/tplink-scraper-router"

  tplink-scraper-living-room-av:
    depends_on:
      - prom-push-gw
    build:
      context: ./tplink-hs110-client-c
      dockerfile: Dockerfile.arm32v6
    restart: always
    environment:
      POLL_TIME_MILLIS: "5000"
      TPLINK_HOST: "192.168.1.37"
      PUSH_GW_HOST: "prom-push-gw"
      PUSH_GW_PORT: "9091"
      PUSH_GW_ENDPOINT: "/metrics/job/tplink-scraper-living-room-av"

  tplink-scraper-washing-machine:
    depends_on:
      - prom-push-gw
    build:
      context: ./tplink-hs110-client-c
      dockerfile: Dockerfile.arm32v6
    restart: always
    environment:
      POLL_TIME_MILLIS: "30000"
      TPLINK_HOST: "192.168.1.211"
      PUSH_GW_HOST: "prom-push-gw"
      PUSH_GW_PORT: "9091"
      PUSH_GW_ENDPOINT: "/metrics/job/tplink-scraper-washing-machine"

  tplink-scraper-microwave:
    depends_on:
      - prom-push-gw
    build:
      context: ./tplink-hs110-client-c
      dockerfile: Dockerfile.arm32v6
    restart: always
    environment:
      POLL_TIME_MILLIS: "30000"
      TPLINK_HOST: "192.168.1.210"
      PUSH_GW_HOST: "prom-push-gw"
      PUSH_GW_PORT: "9091"
      PUSH_GW_ENDPOINT: "/metrics/job/tplink-scraper-microwave"

volumes:
  prometheus-volume:

